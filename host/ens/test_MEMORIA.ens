; - Intermediate code: Quadruple - [INIT_PROG memoria, null, null]
RES  5
MOVE #65535, .SP
MOVE .SP, .IY
SUB  .SP, #26
MOVE .A, .SP
MOVE .IY, /0
BR   /L_memoria

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [PRLABEL L_multiplicar, null, null]
L_multiplicar:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [MV T_0, 0, null]
MOVE #0, #-4[.IY]

; - Intermediate code: Quadruple - [ASSIGN temp, T_0, null]
; - variable local:temp
MOVE #-4[.IY], #-2[.IY]

; - Intermediate code: Quadruple - [MV T_1, 1, null]
MOVE #1, #-5[.IY]

; - Intermediate code: Quadruple - [ASSIGN i, T_1, null]
; - variable local:i
MOVE #-5[.IY], #-3[.IY]

; - Intermediate code: Quadruple - [LAB L_2, null, null]
L_2:

; - Intermediate code: Quadruple - [MVA T_2, temp, null]
; - variable local:temp
SUB  .IY, #2
MOVE .A, #-6[.IY]

; - Intermediate code: Quadruple - [MVA T_3, a, null]
; - parametro:a
MOVE #1[.IY], #-7[.IY]

; - Intermediate code: Quadruple - [ADD T_4, T_2, T_3]
; - temporal referencia:T_2
MOVE #-6[.IY], .R1
; - temporal referencia:T_3
MOVE #-7[.IY], .R2
ADD  [.R1], [.R2]
MOVE .A, #-8[.IY]

; - Intermediate code: Quadruple - [ASSIGN temp, T_4, null]
; - variable local:temp
MOVE #-8[.IY], #-2[.IY]

; - Intermediate code: Quadruple - [MVA T_5, i, null]
; - variable local:i
SUB  .IY, #3
MOVE .A, #-9[.IY]

; - Intermediate code: Quadruple - [MV T_6, 1, null]
MOVE #1, #-10[.IY]

; - Intermediate code: Quadruple - [ADD T_7, T_5, T_6]
; - temporal referencia:T_5
MOVE #-9[.IY], .R1
ADD  [.R1], #-10[.IY]
MOVE .A, #-11[.IY]

; - Intermediate code: Quadruple - [ASSIGN i, T_7, null]
; - variable local:i
MOVE #-11[.IY], #-3[.IY]

; - Intermediate code: Quadruple - [MVA T_8, b, null]
; - parametro:b
MOVE #2[.IY], #-12[.IY]

; - Intermediate code: Quadruple - [MVA T_9, i, null]
; - variable local:i
SUB  .IY, #3
MOVE .A, #-13[.IY]

; - Intermediate code: Quadruple - [CMP T_8, T_9, null]
; - temporal referencia:T_8
MOVE #-12[.IY], .R1
; - temporal referencia:T_9
MOVE #-13[.IY], .R2
CMP  [.R1], [.R2]

; - Intermediate code: Quadruple - [BN L_0, null, null]
BN   /L_0

; - Intermediate code: Quadruple - [MV T_10, 0, null]
MOVE #0, #-14[.IY]

; - Intermediate code: Quadruple - [BR L_1, null, null]
BR   /L_1

; - Intermediate code: Quadruple - [LAB L_0, null, null]
L_0:

; - Intermediate code: Quadruple - [MV T_10, 1, null]
MOVE #1, #-14[.IY]

; - Intermediate code: Quadruple - [LAB L_1, null, null]
L_1:

; - Intermediate code: Quadruple - [BRF L_2, T_10, null]
CMP  #1, #-14[.IY]
BNZ  /L_2

; - Intermediate code: Quadruple - [MVA T_11, temp, null]
; - variable local:temp
SUB  .IY, #2
MOVE .A, #-15[.IY]

; - Intermediate code: Quadruple - [FUNCTION_RETURN T_11, null, null]
; - temporal referencia:
MOVE #-15[.IY], .R1
MOVE [.IY], .R0
DEC  .R0
MOVE [.R1], [.R0]
RET 

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [PRLABEL L_funcmat, null, null]
L_funcmat:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [MVA T_0, n, null]
; - parametro:n
MOVE #1[.IY], #-3[.IY]

; - Intermediate code: Quadruple - [MVA T_1, i, null]
; - parametro:i
MOVE #2[.IY], #-4[.IY]

; - Intermediate code: Quadruple - [CMP T_0, T_1, null]
; - temporal referencia:T_0
MOVE #-3[.IY], .R1
; - temporal referencia:T_1
MOVE #-4[.IY], .R2
CMP  [.R1], [.R2]

; - Intermediate code: Quadruple - [BN L_4, null, null]
BN   /L_4

; - Intermediate code: Quadruple - [MV T_2, 0, null]
MOVE #0, #-5[.IY]

; - Intermediate code: Quadruple - [BR L_5, null, null]
BR   /L_5

; - Intermediate code: Quadruple - [LAB L_4, null, null]
L_4:

; - Intermediate code: Quadruple - [MV T_2, 1, null]
MOVE #1, #-5[.IY]

; - Intermediate code: Quadruple - [LAB L_5, null, null]
L_5:

; - Intermediate code: Quadruple - [BRF L_10, T_2, null]
CMP  #1, #-5[.IY]
BNZ  /L_10

; - Intermediate code: Quadruple - [MVA T_3, n, null]
; - parametro:n
MOVE #1[.IY], #-6[.IY]

; - Intermediate code: Quadruple - [FUNCTION_RETURN T_3, null, null]
; - temporal referencia:
MOVE #-6[.IY], .R1
MOVE [.IY], .R0
DEC  .R0
MOVE [.R1], [.R0]
RET 

; - Intermediate code: Quadruple - [BR L_9, null, null]
BR   /L_9

; - Intermediate code: Quadruple - [LAB L_10, null, null]
L_10:

; - Intermediate code: Quadruple - [WRSTR string2, null, null]
WRSTR /string2

; - Intermediate code: Quadruple - [MVA T_4, n, null]
; - parametro:n
MOVE #1[.IY], #-7[.IY]

; - Intermediate code: Quadruple - [WRINT T_4, null, null]
; - temporal referencia:T_4
MOVE #-7[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [WRSTR string3, null, null]
WRSTR /string3

; - Intermediate code: Quadruple - [MVA T_5, i, null]
; - parametro:i
MOVE #2[.IY], #-8[.IY]

; - Intermediate code: Quadruple - [WRINT T_5, null, null]
; - temporal referencia:T_5
MOVE #-8[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [MVA T_6, i, null]
; - parametro:i
MOVE #2[.IY], #-9[.IY]

; - Intermediate code: Quadruple - [MV T_7, 1, null]
MOVE #1, #-10[.IY]

; - Intermediate code: Quadruple - [ADD T_8, T_6, T_7]
; - temporal referencia:T_6
MOVE #-9[.IY], .R1
ADD  [.R1], #-10[.IY]
MOVE .A, #-11[.IY]

; - Intermediate code: Quadruple - [ASSIGN i, T_8, null]
; - parametro:i
MOVE #2[.IY], .R0
MOVE #-11[.IY], [.R0]

; - Intermediate code: Quadruple - [MVA T_10, i, null]
; - parametro:i
MOVE #2[.IY], #-13[.IY]

; - Intermediate code: Quadruple - [PARAM T_10, null, null]
PUSH #-13[.IY]

; - Intermediate code: Quadruple - [MVA T_11, n, null]
; - parametro:n
MOVE #1[.IY], #-14[.IY]

; - Intermediate code: Quadruple - [PARAM T_11, null, null]
PUSH #-14[.IY]

; - Intermediate code: Quadruple - [CALL T_9, funcmat, null]
; - llamada a funcion:funcmat
; - creacion del RA:  funcmat Nivel:1
MOVE .SP, /1
PUSH .IY
MOVE .SP, .IY
INC  .IY
SUB  .SP, #19
MOVE .A, .SP
; - RA creado
CALL /L_funcmat
; - retorno al RA origen. Destruccion del RA
MOVE [.IY], /1
MOVE .IY, .SP
ADD  .SP, #2
MOVE .A, .SP
MOVE [.IY], .IY
; - mover el retorno de funcion al temporal
SUB  .IY, #12
MOVE .A, .R0
SUB  .IY, #1
MOVE [.A], [.R0]

; - Intermediate code: Quadruple - [ASSIGN temp, T_9, null]
; - variable local:temp
MOVE #-12[.IY], #-2[.IY]

; - Intermediate code: Quadruple - [WRSTR string4, null, null]
WRSTR /string4

; - Intermediate code: Quadruple - [MVA T_12, temp, null]
; - variable local:temp
SUB  .IY, #2
MOVE .A, #-15[.IY]

; - Intermediate code: Quadruple - [WRINT T_12, null, null]
; - temporal referencia:T_12
MOVE #-15[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [MVA T_14, n, null]
; - parametro:n
MOVE #1[.IY], #-17[.IY]

; - Intermediate code: Quadruple - [PARAM T_14, null, null]
PUSH #-17[.IY]

; - Intermediate code: Quadruple - [MVA T_15, temp, null]
; - variable local:temp
SUB  .IY, #2
MOVE .A, #-18[.IY]

; - Intermediate code: Quadruple - [PARAM T_15, null, null]
PUSH #-18[.IY]

; - Intermediate code: Quadruple - [CALL T_13, multiplicar, null]
; - llamada a funcion:multiplicar
; - creacion del RA:  multiplicar Nivel:1
MOVE .SP, /1
PUSH .IY
MOVE .SP, .IY
INC  .IY
SUB  .SP, #16
MOVE .A, .SP
; - RA creado
CALL /L_multiplicar
; - retorno al RA origen. Destruccion del RA
MOVE [.IY], /1
MOVE .IY, .SP
ADD  .SP, #2
MOVE .A, .SP
MOVE [.IY], .IY
; - mover el retorno de funcion al temporal
SUB  .IY, #16
MOVE .A, .R0
SUB  .IY, #1
MOVE [.A], [.R0]

; - Intermediate code: Quadruple - [FUNCTION_RETURN T_13, null, null]
MOVE [.IY], .R0
DEC  .R0
MOVE #-16[.IY], [.R0]
RET 

; - Intermediate code: Quadruple - [LAB L_9, null, null]
L_9:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [PRLABEL L_hijo, null, null]
L_hijo:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [MV T_0, 11, null]
MOVE #11, #-2[.IY]

; - Intermediate code: Quadruple - [ASSIGN h1, T_0, null]
; - parametro:h1
MOVE #1[.IY], .R0
MOVE #-2[.IY], [.R0]

; - Intermediate code: Quadruple - [MV T_1, 8, null]
MOVE #8, #-3[.IY]

; - Intermediate code: Quadruple - [ASSIGN h2, T_1, null]
; - parametro:h2
MOVE #2[.IY], .R0
MOVE #-3[.IY], [.R0]

; - Intermediate code: Quadruple - [MV T_2, 1, null]
MOVE #1, #-4[.IY]

; - Intermediate code: Quadruple - [ASSIGN h3, T_2, null]
; - parametro:h3
MOVE #3[.IY], .R0
MOVE #-4[.IY], [.R0]

; - Intermediate code: Quadruple - [FUNCTION_RETURN null, null, null]
RET 

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [PRLABEL L_padre, null, null]
L_padre:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [MV T_0, 0, null]
MOVE #0, #-13[.IY]

; - Intermediate code: Quadruple - [ASSIGN f, T_0, null]
; - variable local:f
MOVE #-13[.IY], #-2[.IY]

; - Intermediate code: Quadruple - [MV T_1, 6, null]
MOVE #6, #-14[.IY]

; - Intermediate code: Quadruple - [MV T_2, 9, null]
MOVE #9, #-15[.IY]

; - Intermediate code: Quadruple - [SET_INITIALIZE s, padre, null]
; - variable local:s
SUB  .IY, #12
MOVE .A, .IX
MOVE #0, #0[.IX]
MOVE #0, #1[.IX]
MOVE #0, #2[.IX]
MOVE #0, #3[.IX]
MOVE #0, #4[.IX]
MOVE #0, #5[.IX]
MOVE #0, #6[.IX]
MOVE #0, #7[.IX]
MOVE #0, #8[.IX]
MOVE #0, #9[.IX]

; - Intermediate code: Quadruple - [SET_FILL s, T_1, T_2]
CMP  #1, #-14[.IY]
BP  /L_ERR_OOB
CMP  #10, #-15[.IY]
BN  /L_ERR_OOB
; - variable local:s
SUB  .IY, #12
MOVE .A, .R0
SUB  #-14[.IY], #1
MOVE .A, .R3
SUB  #-15[.IY], #1
MOVE .A, .R4
INC  .R4
ADD  .R0, .R4
MOVE .A, .R4
ADD  .R0, .R3
L_25:
MOVE #1, [.A]
INC  .A
CMP  .A, .R4
BNZ  /L_25

; - Intermediate code: Quadruple - [MVA T_3, unoadiez, null]
; - variable global:unoadiez
MOVE #65523, #-16[.IY]

; - Intermediate code: Quadruple - [MVA T_4, s, null]
; - variable local:s
SUB  .IY, #12
MOVE .A, #-17[.IY]

; - Intermediate code: Quadruple - [JOIN_SET T_5, T_3, T_4]
; - temporal referencia:T_3
MOVE #-16[.IY], .R1
; - temporal referencia:T_4
MOVE #-17[.IY], .R2
SUB  .IY, #27
MOVE .A, .R0
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2
OR   [.R1], [.R2]
MOVE .A, [.R0]
INC  .R0
INC  .R1
INC  .R2

; - Intermediate code: Quadruple - [ASSIGN_SET unoadiez, T_5, null]
SUB  .IY, #27
MOVE .A, .R1
; - variable global:unoadiez
MOVE #65523, .R0
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1
MOVE [.R1], [.R0]
INC  .R0
INC  .R1

; - Intermediate code: Quadruple - [MVA T_7, f, null]
; - variable local:f
SUB  .IY, #2
MOVE .A, #-29[.IY]

; - Intermediate code: Quadruple - [PARAM T_7, null, null]
PUSH #-29[.IY]

; - Intermediate code: Quadruple - [MVA T_8, p2, null]
; - parametro:p2
MOVE #2[.IY], #-30[.IY]

; - Intermediate code: Quadruple - [PARAM T_8, null, null]
PUSH #-30[.IY]

; - Intermediate code: Quadruple - [MVA T_9, p1, null]
; - parametro:p1
MOVE #1[.IY], #-31[.IY]

; - Intermediate code: Quadruple - [PARAM T_9, null, null]
PUSH #-31[.IY]

; - Intermediate code: Quadruple - [CALL T_6, hijo, null]
; - llamada a funcion:hijo
; - creacion del RA:  hijo Nivel:2
MOVE .SP, /2
PUSH .IY
MOVE .SP, .IY
INC  .IY
SUB  .SP, #5
MOVE .A, .SP
; - RA creado
CALL /L_hijo
; - retorno al RA origen. Destruccion del RA
MOVE [.IY], /1
MOVE .IY, .SP
ADD  .SP, #3
MOVE .A, .SP
MOVE [.IY], .IY
; - mover el retorno de funcion al temporal
SUB  .IY, #28
MOVE .A, .R0
SUB  .IY, #1
MOVE [.A], [.R0]

; - Intermediate code: Quadruple - [MVA T_10, f, null]
; - variable local:f
SUB  .IY, #2
MOVE .A, #-32[.IY]

; - Intermediate code: Quadruple - [BRF L_14, T_10, null]
; - temporal referencia:
MOVE #-32[.IY], .R1
CMP  #1, [.R1]
BNZ  /L_14

; - Intermediate code: Quadruple - [MVA T_11, p2, null]
; - parametro:p2
MOVE #2[.IY], #-33[.IY]

; - Intermediate code: Quadruple - [IS_IN_SET T_12, unoadiez, T_11]
; - temporal referencia:T_11
MOVE #-33[.IY], .R1
; - variable global:unoadiez
MOVE #65523, .R0
CMP  #1, [.R1]
BP   /L_27
CMP  #10, [.R1]
BN   /L_27
SUB  [.R1], #1
MOVE .A, .R2
ADD  .R0, .R2
MOVE .A, .R2
MOVE [.R2], #-34[.IY]
BR   /L_28
L_27:
MOVE #0, #-34[.IY]
L_28:

; - Intermediate code: Quadruple - [BRF L_14, T_12, null]
CMP  #1, #-34[.IY]
BNZ  /L_14

; - Intermediate code: Quadruple - [MV T_13, 1, null]
MOVE #1, #-35[.IY]

; - Intermediate code: Quadruple - [BR L_13, null, null]
BR   /L_13

; - Intermediate code: Quadruple - [LAB L_14, null, null]
L_14:

; - Intermediate code: Quadruple - [MV T_13, 0, null]
MOVE #0, #-35[.IY]

; - Intermediate code: Quadruple - [LAB L_13, null, null]
L_13:

; - Intermediate code: Quadruple - [BRF L_16, T_13, null]
CMP  #1, #-35[.IY]
BNZ  /L_16

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [WRSTR string5, null, null]
WRSTR /string5

; - Intermediate code: Quadruple - [MVA T_14, global, null]
; - variable global:global
MOVE #65533, #-36[.IY]

; - Intermediate code: Quadruple - [WRINT T_14, null, null]
; - temporal referencia:T_14
MOVE #-36[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [LAB L_16, null, null]
L_16:

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [WRSTR string6, null, null]
WRSTR /string6

; - Intermediate code: Quadruple - [MVA T_15, p1, null]
; - parametro:p1
MOVE #1[.IY], #-37[.IY]

; - Intermediate code: Quadruple - [WRINT T_15, null, null]
; - temporal referencia:T_15
MOVE #-37[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [WRSTR string7, null, null]
WRSTR /string7

; - Intermediate code: Quadruple - [MVA T_16, p2, null]
; - parametro:p2
MOVE #2[.IY], #-38[.IY]

; - Intermediate code: Quadruple - [WRINT T_16, null, null]
; - temporal referencia:T_16
MOVE #-38[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [FUNCTION_RETURN null, null, null]
RET 

; - Intermediate code: Quadruple - [PRLABEL L_memoria, null, null]
L_memoria:

; - Intermediate code: Quadruple - [NOP null, null, null]
NOP

; - Intermediate code: Quadruple - [MV T_0, 2, null]
MOVE #2, #-15[.IY]

; - Intermediate code: Quadruple - [MV T_1, 4, null]
MOVE #4, #-16[.IY]

; - Intermediate code: Quadruple - [SET_INITIALIZE unoadiez, memoria, null]
; - variable global:unoadiez
MOVE #65523, .IX
MOVE #0, #0[.IX]
MOVE #0, #1[.IX]
MOVE #0, #2[.IX]
MOVE #0, #3[.IX]
MOVE #0, #4[.IX]
MOVE #0, #5[.IX]
MOVE #0, #6[.IX]
MOVE #0, #7[.IX]
MOVE #0, #8[.IX]
MOVE #0, #9[.IX]

; - Intermediate code: Quadruple - [SET_FILL unoadiez, T_0, T_1]
CMP  #1, #-15[.IY]
BP  /L_ERR_OOB
CMP  #10, #-16[.IY]
BN  /L_ERR_OOB
; - variable global:unoadiez
MOVE #65523, .R0
SUB  #-15[.IY], #1
MOVE .A, .R3
SUB  #-16[.IY], #1
MOVE .A, .R4
INC  .R4
ADD  .R0, .R4
MOVE .A, .R4
ADD  .R0, .R3
L_29:
MOVE #1, [.A]
INC  .A
CMP  .A, .R4
BNZ  /L_29

; - Intermediate code: Quadruple - [MV T_2, 5, null]
MOVE #5, #-17[.IY]

; - Intermediate code: Quadruple - [ASSIGN num1, T_2, null]
; - variable global:num1
MOVE #-17[.IY], /65521

; - Intermediate code: Quadruple - [MV T_3, 2, null]
MOVE #2, #-18[.IY]

; - Intermediate code: Quadruple - [ASSIGN num2, T_3, null]
; - variable global:num2
MOVE #-18[.IY], /65522

; - Intermediate code: Quadruple - [MVA T_5, num2, null]
; - variable global:num2
MOVE #65522, #-20[.IY]

; - Intermediate code: Quadruple - [PARAM T_5, null, null]
PUSH #-20[.IY]

; - Intermediate code: Quadruple - [MVA T_6, num1, null]
; - variable global:num1
MOVE #65521, #-21[.IY]

; - Intermediate code: Quadruple - [PARAM T_6, null, null]
PUSH #-21[.IY]

; - Intermediate code: Quadruple - [CALL T_4, funcmat, null]
; - llamada a funcion:funcmat
; - creacion del RA:  funcmat Nivel:1
MOVE .SP, /1
PUSH .IY
MOVE .SP, .IY
INC  .IY
SUB  .SP, #19
MOVE .A, .SP
; - RA creado
CALL /L_funcmat
; - retorno al RA origen. Destruccion del RA
MOVE [.IY], /0
MOVE .IY, .SP
ADD  .SP, #2
MOVE .A, .SP
MOVE [.IY], .IY
; - mover el retorno de funcion al temporal
SUB  .IY, #19
MOVE .A, .R0
SUB  .IY, #1
MOVE [.A], [.R0]

; - Intermediate code: Quadruple - [ASSIGN global, T_4, null]
; - variable global:global
MOVE #-19[.IY], /65533

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [WRSTR string8, null, null]
WRSTR /string8

; - Intermediate code: Quadruple - [MVA T_7, global, null]
; - variable global:global
MOVE #65533, #-22[.IY]

; - Intermediate code: Quadruple - [WRINT T_7, null, null]
; - temporal referencia:T_7
MOVE #-22[.IY], .R1
WRINT [.R1]

; - Intermediate code: Quadruple - [MVA T_9, num2, null]
; - variable global:num2
MOVE #65522, #-24[.IY]

; - Intermediate code: Quadruple - [PARAM T_9, null, null]
PUSH #-24[.IY]

; - Intermediate code: Quadruple - [MVA T_10, num1, null]
; - variable global:num1
MOVE #65521, #-25[.IY]

; - Intermediate code: Quadruple - [PARAM T_10, null, null]
PUSH #-25[.IY]

; - Intermediate code: Quadruple - [CALL T_8, padre, null]
; - llamada a funcion:padre
; - creacion del RA:  padre Nivel:1
MOVE .SP, /1
PUSH .IY
MOVE .SP, .IY
INC  .IY
SUB  .SP, #39
MOVE .A, .SP
; - RA creado
CALL /L_padre
; - retorno al RA origen. Destruccion del RA
MOVE [.IY], /0
MOVE .IY, .SP
ADD  .SP, #2
MOVE .A, .SP
MOVE [.IY], .IY
; - mover el retorno de funcion al temporal
SUB  .IY, #23
MOVE .A, .R0
SUB  .IY, #1
MOVE [.A], [.R0]

; - Intermediate code: Quadruple - [WRLN null, null, null]
WRSTR /string0

; - Intermediate code: Quadruple - [END_PROG null, null, null]
HALT
L_ERR_OOB:
WRSTR /string1
WRSTR /string0
HALT

; - Intermediate code: Quadruple - [STR_IN_MEM null, null, null]
string0: DATA "\n"
string1: DATA "Error->value out of bounds from set"
string2: DATA "El parametro n vale: "
string3: DATA "El parametro i vale: "
string4: DATA "temp vale: "
string5: DATA "Var global vale (3125): "
string6: DATA "El p1 debe valer (11): "
string7: DATA "El p2 debe valer (8): "
string8: DATA "El resultado de n1**(n1-n2+2) es: "

